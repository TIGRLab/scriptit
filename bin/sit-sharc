#!/usr/bin/env python
"""
Takes a proclist created using epitome run and submits it to the scheduler
installed on SHARCnet.
"""

import os, sys
import random
import string
import shlex
import subprocess

def submit(cmd):
    # open a subprocess, print the result to the console
    pipe = subprocess.Popen(cmd, shell=True,
                                 executable='/bin/bash',
                                 stdout=subprocess.PIPE,
                                 stderr=subprocess.PIPE)
    out, err = pipe.communicate()
    err = err.decode()
    if len(err) > 0:
        print(err)
    print(out.decode())
    jid = out.decode().split(' ')[-1].strip('\n')
    return jid

def main(input_file):
    """
    Opens the input file, and generates a unique string for each run.
    This keeps jobs submitted by multiple users distinct.
    """
    f = open(input_file)
    f = f.read()
    u_id = ''.join(random.choice(string.ascii_uppercase + string.digits) for _ in range(6))

    subjlist = []
    fslist = []
    for i, line in enumerate(f.split('\n')):

        # skip empty entries
        if line == '':
            continue
        print(line)
        # parsed line
        name = (line.replace('/', ' ').split(' ')[-1][0:-3] + '_' + str(i))

        # freesurfer recon-alls
        if line.startswith('recon-all'):
            name = 'epi-fs_' + u_id + i
            cmd = 'sqsub -q serial-r 23h --memperproc=5g -o {}.log {}'.format(
                                                                    name, line)
            jid = submit(cmd)
            fslist.append(jid)

        # freesurfer exports
        elif line.startswith('epi-fsexport'):
            export_name = 'epi-export_' + u_id
            log = export_name + '.log'
            if len(fslist) > 0:
                cmd = 'sqsub -q serial -r 30m --memperproc=1g -w {} -o {} {}'.format(
                             ','.join(fslist), log, line)
            else:
                cmd = 'sqsub -q serial -r 30m --memperproc=1g -o {} {}'.format(
                             log, line)
            export_hold = submit(cmd)

        # preprocessing
        elif line.split('/')[-1].startswith('cmd'):
            name = 'epi_' + name
            log = name + '.log'
            cmd = 'sqsub -q serial -r 8h --memperproc=2.5g -w {} -o {} -j {} {}'.format(
                               export_hold, log, name, line)
            jid = submit(cmd)
            subjlist.append(jid)

        # qc
        elif line.startswith('epi-qc'):
            name = 'qsub_qc_' + u_id + '_' + str(i)
            logfile = name + '.log'
            cmd = 'sqsub -r 30m --memperproc=1g -o {name}.o -w {subjlist} -q serial -j {name} {line}'.format(
                      name=name, subjlist=','.join(subjlist), line=line)
            _ = submit(cmd)

        print(cmd)

if __name__ == "__main__":

    if len(sys.argv) != 2:
        print('epi-sharc requires one proclist input file')
        sys.exit()

    else:
      input_file = str(sys.argv[1])
      main(input_file)

